plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

apply from: '../jacoco.gradle'
apply plugin: 'kotlin-android'
apply from: '../ktlint.gradle'
apply from: '../detekt.gradle'
apply from: '../sonarcube.gradle'

def localPropertiesFile = file(project(':utilsLib').projectDir.path + "/local.properties")
def localProperties = new Properties()

if (!localPropertiesFile.exists()) {
    localProperties.setProperty("APPCENTER_KEY_PRODUCTION", "")
    localProperties.setProperty("APPCENTER_KEY_DEVELOPMENT", "")

    Writer writer = new FileWriter(localPropertiesFile, false)
    localProperties.store(writer, "empty, as creating the file is done manually via gpg")
    writer.close()
}

android {
    compileSdk 35

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 35

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        def appcenterKeyProd = System.getenv("APPCENTER_KEY_PRODUCTION")
        if (appcenterKeyProd == null) {
            Properties properties = new Properties()
            properties.load(project.file('local.properties').newDataInputStream())
            appcenterKeyProd = properties.getProperty('APPCENTER_KEY_PRODUCTION')
        }

        def appcenterKeyDev = System.getenv("APPCENTER_KEY_DEVELOPMENT")
        if (appcenterKeyDev == null) {
            Properties properties = new Properties()
            properties.load(project.file('local.properties').newDataInputStream())
            appcenterKeyDev = properties.getProperty('APPCENTER_KEY_DEVELOPMENT')
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "APPCENTER_KEY", "\"$appcenterKeyProd\"")
        }
        debug {
            buildConfigField("String", "APPCENTER_KEY", "\"$appcenterKeyDev\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = 17
    }

    flavorDimensions 'Version'
    productFlavors {
        'fdroid' {
            dimension 'Version'
        }
        'googleplay' {
            dimension 'Version'
        }
        'espresso' {
            dimension 'Version'
        }
        'uiautomator' {
            dimension 'Version'
        }
    }

    sourceSets {
        fdroid {
            java.srcDirs = ['src/main/java', 'src/fdroid/java']
        }
        googleplay {
            java.srcDirs = ['src/main/java', 'src/googleplay/java']
        }
        espresso {
            java.srcDirs = ['src/main/java', 'src/fdroid/java']
        }
        uiautomator {
            java.srcDirs = ['src/main/java', 'src/fdroid/java']
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
    lint {
        abortOnError true
        checkAllWarnings true
        htmlReport true
        warningsAsErrors false
        xmlReport false
    }
    namespace 'com.github.jameshnsears.quoteunquote.utils'
}

dependencies {
    googleplayImplementation 'com.microsoft.appcenter:appcenter-crashes:5.0.5'
    googleplayImplementation 'com.google.firebase:firebase-crashlytics:19.4.0'

    implementation 'androidx.annotation:annotation:1.9.1'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation 'androidx.test:runner:1.6.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.14.1'
}

repositories {
    mavenCentral()
}
